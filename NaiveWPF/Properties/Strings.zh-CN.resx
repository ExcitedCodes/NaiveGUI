<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Copyright" xml:space="preserve">
    <value>版权所有</value>
  </data>
  <data name="About_Misty" xml:space="preserve">
    <value>[数据删除]</value>
  </data>
  <data name="About_SpecialThanksTo" xml:space="preserve">
    <value>特别感谢</value>
  </data>
  <data name="About_Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="About_Title" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="Log_Title" xml:space="preserve">
    <value>日志</value>
  </data>
  <data name="Proxy_Title" xml:space="preserve">
    <value>代理</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Subscription_Title" xml:space="preserve">
    <value>订阅</value>
  </data>
  <data name="Tray_Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Tray_Running" xml:space="preserve">
    <value>NaiveGUI - 运行中</value>
  </data>
  <data name="Tray_Toggle" xml:space="preserve">
    <value>切换</value>
  </data>
  <data name="Proxy_Listener" xml:space="preserve">
    <value>代理监听器</value>
  </data>
  <data name="Proxy_Remote" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="Proxy_RemoteMenu_Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="Proxy_RemoteMenu_Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Proxy_RemoteMenu_Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Proxy_RemoteMenu_Rename" xml:space="preserve">
    <value>重命名</value>
  </data>
  <data name="Settings_Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Settings_LanguageAuto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="Settings_Logging" xml:space="preserve">
    <value>启用日志</value>
  </data>
  <data name="Settings_StartOnBoot" xml:space="preserve">
    <value>开机启动</value>
  </data>
  <data name="Subscription_AutoUpdate" xml:space="preserve">
    <value>自动更新</value>
  </data>
  <data name="Subscription_UpdateInterval" xml:space="preserve">
    <value>更新间隔:</value>
  </data>
  <data name="Subscription_UpdateNotification" xml:space="preserve">
    <value>已更新 {0} 个订阅.</value>
  </data>
  <data name="Subscription_UpdateNow" xml:space="preserve">
    <value>立刻更新</value>
  </data>
  <data name="Subscription_Updating" xml:space="preserve">
    <value>更新中</value>
  </data>
  <data name="Tray_NoListener" xml:space="preserve">
    <value>没有可用的代理监听器</value>
  </data>
  <data name="YAAAY_3" xml:space="preserve">
    <value>输入监听URI\n\n示例:\nsocks://0.0.0.0:1080\nhttp://127.0.0.1:8388</value>
  </data>
  <data name="Message_DeleteGroup" xml:space="preserve">
    <value>你确定要删除组 {0} 和其中的 {1} 个服务器吗?</value>
  </data>
  <data name="YAAAY_8" xml:space="preserve">
    <value>输入新名称\n如果有同名的组, 它们将被合并\n同名的项将被覆盖!</value>
  </data>
  <data name="Log_Clear" xml:space="preserve">
    <value>清空</value>
  </data>
  <data name="Message_NoRemote" xml:space="preserve">
    <value>启动代理监听器前必须选择一个服务器! 在服务器列表中点击一个项目来选择它.</value>
  </data>
  <data name="Tray_Crashed" xml:space="preserve">
    <value>代理监听器崩溃了, 正在重启...</value>
  </data>
  <data name="Tray_CrashedTooMany" xml:space="preserve">
    <value>代理监听器崩溃次数过多, 请手动修复问题.</value>
  </data>
  <data name="Log_Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Settings_AllowAddListener" xml:space="preserve">
    <value>允许添加 Listener</value>
  </data>
  <data name="Settings_AllowWindowResize" xml:space="preserve">
    <value>允许修改窗口尺寸</value>
  </data>
  <data name="AddRemote_Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddRemote_Name" xml:space="preserve">
    <value>服务器名称</value>
  </data>
  <data name="AddRemote_Padding" xml:space="preserve">
    <value>启用 Padding</value>
  </data>
  <data name="AddRemote_Title" xml:space="preserve">
    <value>添加服务器</value>
  </data>
  <data name="AddRemote_URI" xml:space="preserve">
    <value>服务器URI</value>
  </data>
  <data name="AddRemote_EditSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="AddRemote_EditTitle" xml:space="preserve">
    <value>编辑服务器</value>
  </data>
  <data name="AddSubscription_Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddSubscription_Name" xml:space="preserve">
    <value>显示名称</value>
  </data>
  <data name="AddSubscription_Title" xml:space="preserve">
    <value>添加订阅</value>
  </data>
  <data name="AddSubscription_URI" xml:space="preserve">
    <value>订阅 URL</value>
  </data>
</root>