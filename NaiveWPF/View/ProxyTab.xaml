<UserControl x:Class="NaiveGUI.View.ProxyTab" mc:Ignorable="d"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Data="clr-namespace:NaiveGUI.Data"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture="en"
             lex:ResxLocalizationProvider.DefaultAssembly="NaiveGUI"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             d:DesignWidth="690" d:DesignHeight="600">
    <UserControl.Resources>
        <ContextMenu x:Key="RemoteMenu">
            <MenuItem Header="{lex:Loc Proxy_RemoteMenu_Edit}" Click="MenuItemEdit_Click"/>
            <MenuItem Header="{lex:Loc Proxy_RemoteMenu_Delete}" Click="MenuItemDelete_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="RemoteGroupMenu">
            <MenuItem Header="{lex:Loc Proxy_RemoteMenu_Add}" Click="MenuItemAddRemote_Click"/>
            <Separator/>
            <MenuItem Header="{lex:Loc Proxy_RemoteMenu_Rename}" Click="MenuItemRename_Click"/>
            <MenuItem Header="{lex:Loc Proxy_RemoteMenu_Delete}" Click="MenuItemDelete_Click"/>
        </ContextMenu>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <ScrollViewer.Template>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Margin="0,20,0,0"/>
                </Grid>
            </ControlTemplate>
        </ScrollViewer.Template>
        <StackPanel>
            <TextBlock Foreground="#DDFFFFFF" FontSize="26" Margin="24,0,0,0" Text="{lex:Loc Proxy_Listener}"/>
            <ListView ItemsSource="{Binding Listeners}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="{x:Null}" BorderBrush="{x:Null}" Margin="8,0,0,0">
                <ListView.Resources>
                    <DataTemplate DataType="{x:Type Data:FakeListener}">
                        <Border CornerRadius="2" Width="192" Height="88" BorderThickness="4" Opacity="0.5" BorderBrush="White">
                            <Button Width="192" Height="88" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center" Click="ButtonAddListener_Click">
                                <materialDesign:PackIcon Kind="AddCircleOutline" RenderTransformOrigin="0.5,0.5" Foreground="White">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                            </Button>
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type Data:Listener}">
                        <Border CornerRadius="2" Width="192" Height="88" Cursor="Hand" Background="{Binding StatusColor}" PreviewMouseLeftButtonDown="Listener_PreviewMouseLeftButtonDown" MouseEnter="Listener_MouseEvent" MouseLeave="Listener_MouseEvent" Initialized="Listener_Initialized">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="ShadowState">
                                    <VisualState Name="Default">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity" To="0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" To="2"/>
                                            <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Opacity" To="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Hover">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity" To="0.6"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" To="3"/>
                                            <DoubleAnimation Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity" To="0.8"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" To="6"/>
                                            <DoubleAnimation Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="Default" GeneratedDuration="00:00:00.1"/>
                                        <VisualTransition To="Hover" GeneratedDuration="00:00:00.1"/>
                                        <VisualTransition To="Selected" GeneratedDuration="00:00:00.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="16" RenderingBias="Quality" ShadowDepth="2" Opacity="0.3"/>
                            </Border.Effect>
                            <Grid>
                                <Button VerticalAlignment="Top" HorizontalAlignment="Right" Width="16" Height="16" Margin="0,8,8,0" Style="{StaticResource MaterialDesignIconForegroundButton}" Click="ButtonDelete_Click" Name="DeleteButton" Opacity="0" Panel.ZIndex="666">
                                    <materialDesign:PackIcon Kind="WindowClose" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Tag="XD">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </Button>
                                <TextBlock Foreground="White" FontSize="20" Text="{Binding Listen.Host, Mode=OneWay}" Margin="16,16,0,0"/>
                                <TextBlock FontSize="12" Foreground="White" Opacity="0.8" VerticalAlignment="Bottom" Margin="16,0,0,16">
                                    <Run Text="{Binding Listen.Port, Mode=OneWay}"></Run>
                                    ·
                                    <Run Text="{Binding SchemeUpper, Mode=OneWay}"></Run>
                                </TextBlock>
                                <TextBlock Foreground="White" FontSize="12" Text="{Binding StatusText}" Cursor="../Resources/lightning.cur" HorizontalAlignment="Right" VerticalAlignment="Bottom" MouseLeftButtonDown="ListenerToggle_MouseLeftButtonDown" Tag="XD" Margin="0,0,16,16"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Margin" Value="16"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <TextBlock Foreground="#DDFFFFFF" FontSize="26" Margin="24,0,0,0" Text="{lex:Loc Proxy_Remote}"/>
            <TreeView Foreground="White" Margin="16" ItemsSource="{Binding Remotes}" Name="WTF" SelectedItemChanged="WTF_SelectedItemChanged">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type Data:RemoteConfigGroup}" ItemsSource="{Binding}">
                        <emoji:TextBlock Text="{Binding Name}" Margin="3 2" FontSize="16" MouseDown="TextBlockRemoteGroup_MouseDown" ContextMenu="{StaticResource RemoteGroupMenu}"/>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type Data:RemoteConfig}">
                        <emoji:TextBlock Text="{Binding Name}" Padding="3 2" FontSize="16" MouseDown="TextBlockRemote_MouseDown" ContextMenu="{StaticResource RemoteMenu}"/>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </StackPanel>
    </ScrollViewer>
</UserControl>
